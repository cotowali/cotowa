default: run
disable_help: true
var:
  lic_path: cmd/lic
  hello_world: examples/hello_world.li
  err_source: tests/expr_err.li
tasks:
  run: v run {{lic_path}} ${@:- {{hello_world}} }
  run.stdin: v run {{lic_path}}
  no-emit: v run {{lic_path}} --no-emit $@
  debug: v -cg run {{lic_path}} $@
  watch: v watch --add $@ run {{lic_path}} $@
  profile: v -profile profile.txt run {{lic_path}} $@
  trace:
    tasks:
      lexer: v -cg -d trace_lexer run {{lic_path}} --no-emit $@
      parser: v -cg -d trace_parser run {{lic_path}} --no-emit $@
      resolver: v -cg -d trace_resolver run {{lic_path}} --no-emit $@
      checker: v -cg -d trace_checker run {{lic_path}} --no-emit $@
  time: |
    /usr/bin/time -f 'Time: %es, Memory: %M: KB ' v run {{lic_path}}

  build.c: v {{lic_path}} -o main.c

  build: mkdir -p .bin && v -prod {{lic_path}} -o .bin/lic
  symlink: ln -fs $(pwd)/.bin/lic /usr/local/bin/lic
  install: z build && cp $(pwd)/.bin/lic /usr/local/bin/lic

  ast: z run tools ast $@
  tokens: z run tools tokens $@
  scope: z run tools scope $@

  fix:
    - z fmt

  test:
    run: |
      if [ "$#" -eq "0" ]
      then
        z test.unit
        z test.integration
      else
        for f in "$@"
        do
          if echo $f | grep -e '_test.v$' -e '^cotowali' > /dev/null
          then
            z test.unit $f
          else
            z test.integration $f
          fi
        done
      fi
    tasks:
      unit: v test ${@:-./cotowali}
      integration: v run tests/run.v $@
      fix: z test integration --fix $@
      hello: z run examples/hello.li

  fmt: v fmt -w .
  fmt.c: z fmt && z test && git add . && git commit -m 'fmt'

  publish:
    run: z publish.docker
    tasks:
      docker:
        - docker compose --env-file ./docker/push.env build
        - docker compose --env-file ./docker/push.env push
  release:
    tasks:
      monthly: |
        date="$(date +%Y.%m)"
        tag="monthly.$date"
        git tag -s "$tag" -m "Monthly release: $date"
        git push origin "$tag"
  ci:
    tasks:
      setup-v: cd /tmp && git clone --depth=1 https://github.com/vlang/v && cd v && make && pwd >> $GITHUB_PATH
      format: v fmt -verify .
      test: z test
      test.shellcheck: z test --shellcheck
      run-on-all-conditions:
        - z {{hello_world}}
        - z ast {{hello_world}}
        - z ast {{err_source}}
        - z tokens {{hello_world}}
        - z tokens {{err_source}}
        - z scope {{hello_world}}
        - z scope {{err_source}}
        - z trace lexer {{hello_world}}
        - z trace parser {{hello_world}}
        - z trace resolver {{hello_world}}
        - z fix
