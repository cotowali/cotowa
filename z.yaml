default: run
disable_help: true
tasks:
  run: v run cmd/ric/main.v $@
  run.no_emit: v run cmd/ric/main.v --no-emit $@
  debug: v -cg run cmd/ric/main.v $@

  trace:
    tasks:
      parser: v -d trace_parser run cmd/ric/main.v --no-emit $@
      lexer: v -d trace_lexer run cmd/ric/main.v --no-emit $@

  build.c: v cmd/ric/main.v -o main.c

  build: mkdir -p .bin && v cmd/ric/main.v -o .bin/ric
  symlink: ln -fs $(pwd)/.bin/ric /usr/local/bin/ric
  install: cp $(pwd)/.bin/ric /usr/local/bin/ric

  ast: z run tools ast $@
  tokens: z run tools tokens $@
  scope: z run tools scope $@

  test:
    run: |
      if [ "$#" -eq "0" ]
      then
        z test.unit
        z test.integration
      else
        for f in "$@"
        do
          if [ "$(dirname "$f")" = 'tests' ] || [ "$(basename "$f")" = 'tests' ]
          then
            z test.integration $f
          else
            z test.unit $f
          fi
        done
      fi
    tasks:
      unit: v test ${@:-./cotowari}
      integration: v run tests/run.v $@
      fix: v -d fix run tests/run.v $@
      hello: z run examples/hello.ri

  fmt: v fmt -w .
  fmt.c: z fmt && z test && git add . && git commit -m 'fmt'

  publish:
    run: z publish.docker
    tasks:
      docker:
        - docker compose --env-file ./docker/push.env build
        - docker compose --env-file ./docker/push.env push
  ci:
    tasks:
      setup-v: cd /tmp && git clone --depth=1 https://github.com/vlang/v && cd v && make && pwd >> $GITHUB_PATH
      format: v fmt -verify .
      test: z test
