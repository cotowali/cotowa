fn add(a int, b int) int {
  return a + b
}

fn test_var_without_init() {
  var int_var int
  var float_var float
  var string_var string
  var bool_var bool
  assert int_var == 0
  assert float_var == 0.0
  assert string_var == ''
  assert !bool_var
}
test_var_without_init()

fn test_simple_assign() {
  var n = 0
  assert n == 0
  n = 1
  assert n == 1

  n = 1 + 2
  assert n == 3
  n = n + 2
  assert n == 5

  n = add(1, 2)
  assert n == 3
  n = add(n, 2)
  assert n == 5
}
test_simple_assign()

fn test_composite_assign() {
  var n = 0
  n += 3
  assert n == 3
  n *= 3
  assert n == 9
  n /= 3
  assert n == 3
  n %= 2
  assert n == 1
}
test_composite_assign()
